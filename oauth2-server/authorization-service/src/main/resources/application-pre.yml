server:
  port: 8090
  contextPath: /authorization-service

#security:
#  oauth2:
#    client:
#      client-id: sparklr
#      client-secret: secret
#      scope: read,write
#      auto-approve-scopes: '.*'

spring:
  application:
    name: authorization-service
  redis:
    database: 4
    host: redis
    password:
    port: 6379
    pool:
      max-active: 8
      max-wait: 8
      min-idle: 0
      max-idle: 8

#security:
#  oauth2:
#    client:
#      client-id: sparklr
#      client-secret: secret
#      scope: read,write
#      auto-approve-scopes: '.*'


#github:
#  client:
#    clientId: my-trusted-client-with-secret
#    clientSecret: somesecret
#    accessTokenUri: https://localhost:9090/oauth/token
#    userAuthorizationUri: https://localhost:9090/oauth/authorize
#    clientAuthenticationScheme: form
#  resource:
#    userInfoUri: https://localhost:9090/user

logging:
  level:
    org.springframework.security: DEBUG

authorization:
  manager:
    url: http://172.16.10.208:8007/api-am/authorization-manager

resourceServer:
  resourceId: authorization-service

eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}
    hostname: ${spring.cloud.client.ipAddress}
  client:
    serviceUrl:
      defaultZone: http://peer1:8000/eureka/,http://peer2:8000/eureka/